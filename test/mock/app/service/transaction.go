// Code generated by MockGen. DO NOT EDIT.
// Source: ./app/service/transaction.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	http_model "btc/app/model/http-model"
	repo "btc/app/model/repo"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockITransactionService is a mock of ITransactionService interface.
type MockITransactionService struct {
	ctrl     *gomock.Controller
	recorder *MockITransactionServiceMockRecorder
}

// MockITransactionServiceMockRecorder is the mock recorder for MockITransactionService.
type MockITransactionServiceMockRecorder struct {
	mock *MockITransactionService
}

// NewMockITransactionService creates a new mock instance.
func NewMockITransactionService(ctrl *gomock.Controller) *MockITransactionService {
	mock := &MockITransactionService{ctrl: ctrl}
	mock.recorder = &MockITransactionServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockITransactionService) EXPECT() *MockITransactionServiceMockRecorder {
	return m.recorder
}

// AddTransaction mocks base method.
func (m *MockITransactionService) AddTransaction(ctx context.Context, trx http_model.Transaction) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddTransaction", ctx, trx)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddTransaction indicates an expected call of AddTransaction.
func (mr *MockITransactionServiceMockRecorder) AddTransaction(ctx, trx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddTransaction", reflect.TypeOf((*MockITransactionService)(nil).AddTransaction), ctx, trx)
}

// ListTransaction mocks base method.
func (m *MockITransactionService) ListTransaction(ctx context.Context, startTimeStr, endTimeStr string) (*[]repo.Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTransaction", ctx, startTimeStr, endTimeStr)
	ret0, _ := ret[0].(*[]repo.Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTransaction indicates an expected call of ListTransaction.
func (mr *MockITransactionServiceMockRecorder) ListTransaction(ctx, startTimeStr, endTimeStr interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTransaction", reflect.TypeOf((*MockITransactionService)(nil).ListTransaction), ctx, startTimeStr, endTimeStr)
}
